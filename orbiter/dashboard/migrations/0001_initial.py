# Generated by Django 5.0 on 2024-01-14 10:25

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Webpage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.CharField(max_length=200)),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("date", models.DateTimeField(verbose_name="date published")),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("website_url", models.URLField()),
                ("business_fields", models.TextField()),
                ("employee_count", models.IntegerField()),
                ("employee_reviews_rating", models.FloatField()),
                ("job_portal_url", models.URLField()),
                ("last_crawled_at", models.DateTimeField(auto_now=True)),
                (
                    "competitor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competitors",
                        to="dashboard.company",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "companies",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("size", models.IntegerField()),
                ("business_fields", models.TextField()),
                ("street", models.CharField(max_length=200)),
                ("street_number", models.PositiveIntegerField()),
                ("postal_code", models.PositiveIntegerField()),
                ("city", models.CharField(max_length=200)),
                ("state", models.CharField(max_length=200)),
                ("country", models.CharField(max_length=200)),
                ("active", models.BooleanField()),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="locations",
                        to="dashboard.company",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("job_id", models.CharField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=200)),
                ("job_url", models.URLField()),
                ("category", models.CharField(max_length=100)),
                ("tech_skills", models.JSONField(blank=True, null=True)),
                ("non_tech_skills", models.JSONField(blank=True, null=True)),
                (
                    "salary_lower_end",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "salary_upper_end",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("vacant_since", models.DateField()),
                ("start_date", models.DateField()),
                ("offline_since", models.DateField(blank=True, null=True)),
                ("benefits", models.JSONField(blank=True, null=True)),
                ("experience_in_years_lower_end", models.PositiveIntegerField()),
                ("experience_in_years_upper_end", models.PositiveIntegerField()),
                ("leadership_role", models.BooleanField(default=False)),
                ("team_size", models.PositiveIntegerField()),
                ("full_text", models.TextField()),
                ("employment_type", models.CharField(max_length=100)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="dashboard.company",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="dashboard.location",
                    ),
                ),
            ],
            options={
                "ordering": ["-vacant_since"],
            },
        ),
    ]
